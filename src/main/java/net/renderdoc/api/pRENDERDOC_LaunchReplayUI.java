// Generated by jextract

package net.renderdoc.api;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * unsigned int (*pRENDERDOC_LaunchReplayUI)(unsigned int connectTargetControl,char* cmdline);
 * }
 */
public interface pRENDERDOC_LaunchReplayUI {

    int apply(int connectTargetControl, java.lang.foreign.MemorySegment cmdline);
    static MemorySegment allocate(pRENDERDOC_LaunchReplayUI fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$7.const$4, fi, constants$7.const$3, scope);
    }
    static pRENDERDOC_LaunchReplayUI ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (int _connectTargetControl, java.lang.foreign.MemorySegment _cmdline) -> {
            try {
                return (int)constants$7.const$5.invokeExact(symbol, _connectTargetControl, _cmdline);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


