// Generated by jextract

package net.renderdoc.api;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * unsigned int (*pRENDERDOC_GetCaptureOptionU32)(enum RENDERDOC_CaptureOption opt);
 * }
 */
public interface pRENDERDOC_GetCaptureOptionU32 {

    int apply(int opt);
    static MemorySegment allocate(pRENDERDOC_GetCaptureOptionU32 fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$1.const$2, fi, constants$1.const$1, scope);
    }
    static pRENDERDOC_GetCaptureOptionU32 ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (int _opt) -> {
            try {
                return (int)constants$1.const$3.invokeExact(symbol, _opt);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


