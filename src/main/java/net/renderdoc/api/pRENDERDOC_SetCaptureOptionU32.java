// Generated by jextract

package net.renderdoc.api;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * int (*pRENDERDOC_SetCaptureOptionU32)(enum RENDERDOC_CaptureOption opt,unsigned int val);
 * }
 */
public interface pRENDERDOC_SetCaptureOptionU32 {

    int apply(int opt, int val);
    static MemorySegment allocate(pRENDERDOC_SetCaptureOptionU32 fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$0.const$2, fi, constants$0.const$1, scope);
    }
    static pRENDERDOC_SetCaptureOptionU32 ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (int _opt, int _val) -> {
            try {
                return (int)constants$0.const$3.invokeExact(symbol, _opt, _val);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


