// Generated by jextract

package net.renderdoc.api;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*pRENDERDOC_SetCaptureTitle)(char* title);
 * }
 */
public interface pRENDERDOC_SetCaptureTitle {

    void apply(java.lang.foreign.MemorySegment title);
    static MemorySegment allocate(pRENDERDOC_SetCaptureTitle fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$10.const$3, fi, constants$4.const$4, scope);
    }
    static pRENDERDOC_SetCaptureTitle ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _title) -> {
            try {
                constants$5.const$0.invokeExact(symbol, _title);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


